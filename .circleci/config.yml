version: 2
jobs:
  test:
    docker:
      - image: circleci/elixir:1.9.0-node-browsers-legacy # NOTE: keep in sync with elixir_buildpack.conf
        environment:
          MIX_ENV: test
          POSTGRES_USER: postgres
      - image: circleci/postgres:11.5-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: review_test
          POSTGRES_PASSWORD:

    steps:
      - checkout

      - run: mix local.hex --force
      - run: mix local.rebar --force

      - restore_cache:
          keys:
            - v1-mix-cache-{{ checksum "mix.lock" }}
            - v1-mix-cache
      - restore_cache:
          keys:
            - v1-build-cache

      - run: mix do deps.get, compile

      - save_cache:
          key: v1-mix-cache-{{ checksum "mix.lock" }}
          paths: "deps"
      - save_cache:
          key: v1-mix-cache
          paths: "deps"
      - save_cache:
          key: v1-mix-cache
          paths: "deps"
      - save_cache:
          key: v1-build-cache
          paths: "_build"
      - save_cache:
          key: v1-build-cache
          paths: "_build"

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - restore_cache:
          keys:
            - v1-deps-cache
      - restore_cache:
          keys:
            - v1-node-cache
      - run: script/ci/prepare.sh
      - save_cache:
          key: v1-deps-cache
          paths: /home/circleci/dependencies
      - save_cache:
          key: v1-node-cache
          paths: node_modules

      - run: script/ci/pipeline.sh tests script/ci/tests.sh

  deploy:
    docker:
      - image: circleci/ruby:latest  # Any common image that can run bash is fine

    steps:
      - checkout:
          name: "Checking out code"

      - run:
          name: "Deploying to production"
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              script/ci/pipeline.sh deploy_production "script/ci/deploy.sh $HEROKU_APP_NAME"
            fi

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test
